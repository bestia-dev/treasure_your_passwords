searchState.loadedDescShard("treasure_your_passwords", 0, "src/bin/treasure_your_passwords/main.rs\nANSI color\nANSI color\nANSI color\nANSI color\nApplication state (static) is initialized only once in the …\nANSI color\nConvert to strong password.\nDelete token.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nList token names.\nEntry point into the bin-executable.\nThe original Rust report of the panic is ugly for the end …\nPrint help on the terminal.\nShow token, decrypted.\nStore token, encrypted.\nInitialize tracing to file logs/automation_tasks_rs.log\nApplication state (static) is initialized only once in the …\nGeneric functions to encrypt and decrypt secrets using the …\nGenerate strong password.\nSecret vault can store many secret tokens.\nStruct that represents the json data saved in the ‘*.enc…\nDecode base64 from string to 32bytes.\nDecode base64 from string to string.\nDecrypts plain_encrypted_string with …\nDecode base64 from string to 32bytes.\nEncode base64 from bytes to string.\nEncode base64 from string to string.\nEncrypts symmetrically secret_string_to_encrypt with …\nDoes exist file on path\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet reference to file name.\nGet reference to full file path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrivate key file path: tilde string and PathBuf.\nGet the string from the file that is base64 encoded.\nGenerate a random seed.\nShorten the <code>Vec&lt;u8&gt; to [u8;32]</code>.\nSign the seed with the private key into 32 bytes secret.\nSign seed with ssh-agent into 32 bytes secret.\nReturns the secret signed seed.\nReplace tilde with home::home_dir, only for utf8.\nGenerate strong password.\nDelete secret token from vault.\nList token names from vault.\nGet secret token from vault.\nStore secret token to vault.")